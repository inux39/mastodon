version: '3'
services:

  db:
    restart: always
    image: postgres:12-alpine
    shm_size: 256mb
    networks:
      - internal_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
    volumes:
      - ./postgres:/var/lib/postgresql/data

  redis:
    restart: always
    image: redis:6-alpine
    networks:
      - internal_network
    logging:
      options:
        max-size: "3m"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
    volumes:
      - ./redis:/data

#  es:
#    restart: always
#    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.1.3
#    environment:
#      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
#    networks:
#      - internal_network
#    healthcheck:
#      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data

  web:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000"
    networks:
      - external_network
      - internal_network
    logging:
      options:
        max-size: "5m"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:3000/health || exit 1"]
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      - db
      - redis
#      - es
    volumes:
      - ./public/system:/mastodon/public/system

  streaming:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    command: node ./streaming
    networks:
      - external_network
      - internal_network
    logging:
      driver: none
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --proxy=off localhost:4000/api/v1/streaming/health || exit 1"]
    ports:
      - "127.0.0.1:4000:4000"
    depends_on:
      - db
      - redis

    fluentd:
        build: ./modules/fluentd
        restart: always
        volumes:
            - ./modules/fluentd/fluent.conf:/fluentd/etc/fluent.conf
            - ./modules/fluentd/buffer:/var/tmp/fluentd
            - ./modules/nginx/log:/var/log/nginx
        networks:
            - fluentd

    nginx:
        image: nginx:1.17-alpine
        restart: always
        volumes:
            - ./modules/nginx/log:/var/log/nginx
            - ./modules/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./public:/srv/http
        ports:
            - 8800:80
        depends_on:
            - fluentd
        networks:
            - internal_network
            - external_network

  sidekiq-default-1:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    environment:
      - DB_POOL=10
    command: bundle exec sidekiq -c 10 -q default -q mailers
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    logging:
      driver: none
    volumes:
      - ./public/system:/mastodon/public/system

#  sidekiq-default-2:
#    build: .
#    image: tootsuite/mastodon
#    restart: always
#    env_file: .env.production
#    environment:
#      - DB_POOL=10
#    command: bundle exec sidekiq -c 10 -q default -q mailers
#    depends_on:
#      - db
#      - redis
#    networks:
#      - external_network
#      - internal_network
#    volumes:
#      - ./public/system:/mastodon/public/system

  sidekiq-pull-1:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    environment:
      - DB_POOL=5
    command: bundle exec sidekiq -c 5 -q pull
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    logging:
      driver: none
    volumes:
      - ./public/system:/mastodon/public/system

  sidekiq-push-1:
    build: .
    image: tootsuite/mastodon
    restart: always
    env_file: .env.production
    environment:
      - DB_POOL=10
    command: bundle exec sidekiq -c 10 -q push
    depends_on:
      - db
      - redis
    networks:
      - external_network
      - internal_network
    logging:
      driver: none
    volumes:
      - ./public/system:/mastodon/public/system

## Uncomment to enable federation with tor instances along with adding the following ENV variables
## http_proxy=http://privoxy:8118
## ALLOW_ACCESS_TO_HIDDEN_SERVICE=true
#  tor:
#    image: sirboops/tor
#    networks:
#      - external_network
#      - internal_network
#
#  privoxy:
#    image: sirboops/privoxy
#    volumes:
#      - ./priv-config:/opt/config
#    networks:
#      - external_network
#      - internal_network

networks:
    fluentd:
        external: true
  external_network:
  internal_network:
    internal: true
